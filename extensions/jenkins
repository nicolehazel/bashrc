###########################################################################
### Jenkins Extensions
### 
### Currently Jenkins sits in the Quantum Simulation AWS account. This is
### not terraformed. There is a custom user defined in this account called
### `qemist-deployer` with an access key called `daithi`. This was manually
### created too. These credentials have been added to `~/.aws/credentials`
### so setting `AWS_PROFILE` variable will authenticate to that account
### where we can get the Jenkins instance information.

### TODO: This is likely outdated after devops re-created Jenks in the new account
###########################################################################

# Backup the current profile.
OLD_AWS_PROFILE=$AWS_PROFILE
export AWS_PROFILE=daithi

OLD_AWS_REGION=$AWS_REGION
export AWS_REGION=us-west-2

# My ec2 instance for development 
EC2_INSTANCE_ID=i-08c7268221aa03e9b

# Jenkins worker instances
EC2_JENKINS_MASTER=i-0efe14ad9cdd50895
EC2_JENKINS_WORKER1=i-0196603ef609742ba
EC2_JENKINS_WORKER2=i-0a0879a4c4e272c44

ssh-add --apple-use-keychain "$HOME/.ssh/nicole-key.pem"

ssh_ec2() {
  EC2_ADDRESS=$(aws ec2 describe-instances --filters "Name=instance-id,Values=$EC2_INSTANCE_ID" --query "Reservations[].Instances[].PublicDnsName" --region $AWS_REGION | jq -r '.[0]' | tr -d '\n')
  ssh ubuntu@$EC2_ADDRESS
}

ec2_address() {
  aws ec2 describe-instances --filters "Name=instance-id,Values=$1" --query "Reservations[].Instances[].PublicDnsName" --region $AWS_REGION | jq -r '.[0]' | tr -d '\n'
  echo
}

ec2_address $EC2_JENKINS_MASTER
ec2_address $EC2_JENKINS_WORKER1
ec2_address $EC2_JENKINS_WORKER2

# Reset the profile and region to what it was previously.
export AWS_PROFILE=$OLD_AWS_PROFILE
export AWS_REGION=$OLD_AWS_REGION

### ALIASES
alias ssh_jenkins="ssh -t jenkins_w1 'sudo su - jenkins'"
